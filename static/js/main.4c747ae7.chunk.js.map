{"version":3,"sources":["components/Account.jsx","constants.js","hooks/LookupAddress.js","hooks/LocalStorage.js","components/Address.jsx","components/Blockie.jsx","components/AddressInput.jsx","components/EtherInput.jsx","components/Balance.jsx","helpers/Transactor.js","components/Wallet.jsx","components/Faucet.jsx","components/DragandDrop.jsx","views/Home.jsx","App.jsx","index.jsx","services/ipfs-service.js"],"names":["Account","address","provider","price","minimized","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","blockExplorer","tabsValues","value","label","activeTab","setActiveTab","useState","isLoggedIn","setIsLoggedIn","toggleLogin","userAddress","availableNetworks","currentNetwork","setCurrentNetwork","modalButtons","cachedProvider","push","Button","key","style","verticalAlign","marginLeft","marginTop","shape","size","onClick","NavBar","title","tabs","values","onSelect","login","onLoginClick","onLogoutClick","onAddressClick","alert","network","disabled","extraButtons","icon","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","d","x1","y1","x2","y2","INFURA_ID","NETWORK","chainId","n","NETWORKS","localhost","name","color","rpcUrl","window","location","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","gasPrice","matic","mumbai","iExecSidechain","useLookupAddress","ensName","setEnsName","ensCache","setEnsCache","initialValue","storedValue","setStoredValue","item","localStorage","getItem","JSON","parse","error","console","log","valueToStore","Function","setItem","stringify","useLocalStorage","useEffect","timestamp","Date","now","async","reportedName","lookupAddress","resolvedAddress","resolveName","getAddress","e","then","Text","Typography","Address","props","ens","ensProvider","avatar","paragraph","rows","displayAddress","substr","indexOf","etherscanLink","blockExplorerLink","target","href","rel","seed","toLowerCase","scale","text","onChange","editable","copyable","fontSize","paddingLeft","Blockie","AddressInput","setValue","scan","setScan","currentValue","scannerButton","cursor","count","CameraOutlined","QrcodeOutlined","updateAddress","useCallback","newValue","possibleAddress","scanner","zIndex","position","left","top","delay","resolution","onError","onScan","possibleNewValue","lastIndexOf","autoComplete","autoFocus","placeholder","prefix","addonAfter","EtherInput","mode","setMode","display","setDisplay","option","usdValue","parseFloat","toFixed","ethValue","Balance","dollarMode","setDollarMode","balance","setBalance","usePoller","newBalance","getBalance","pollTime","floatBalance","usingBalance","etherBalance","formatEther","displayBalance","dollarMultiplier","padding","Transactor","etherscan","signer","getSigner","getNetwork","options","dappId","system","networkId","transactionHandler","txInformation","notify","Notify","etherscanNetwork","etherscanTxUrl","result","tx","Promise","gasLimit","hexlify","sendTransaction","emitter","hash","on","transaction","onclick","open","notification","info","message","description","placement","Paragraph","Wallet","signerAddress","useUserAddress","selectedAddress","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","providerSend","WalletOutlined","rotate","receiveButton","privateKeyButton","level","includeMargin","renderAs","imageSettings","excavate","KeyOutlined","wallet","ethers","extraPkDisplayAdded","extraPkDisplay","backgroundStyle","pastpk","pastwallet","currentPrivateKey","privateKey","createRandom","_signingKey","reload","inputStyle","visible","float","paddingRight","onOk","onCancel","footer","type","loading","parseEther","to","SendOutlined","Faucet","setAddress","blockie","localProvider","suffix","baseStyle","flex","flexDirection","alignItems","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","focusedStyle","acceptStyle","rejectStyle","DragandDrop","acceptedFiles","getRootProps","getInputProps","isFocused","isDragAccept","isDragReject","useDropzone","files","map","file","path","parentCallback","useMemo","className","useStyles","makeStyles","container","paddingTop","input","maxWidth","divider","dividerlast","dividertee","deploydataset","pushtEncryptionkeytosms","publishteedatasetorder","orderbook","Home","readProvider","writeProvider","contracts","iexec","Key","setKey","Files","setFiles","encryptionKeyValue","setEncryptionValue","datasetNameValue","setDatasetNameValue","dataseturlipfsValue","setDataseturlipfsValue","datasetChecksumValue","setDatasetChecksumValue","datasetEncryptionKeyValue","setDatasetEncryptionKeyValue","datasetAddressValue","setDatasetAddressValue","handleDatasetAddressChange","datasetVolumeValue","setDatasetVolumeValue","datasetAppRestrictValue","setDatasetAppRestrictValue","datasetRequesterRestrictValue","setDatasetRequesterRestrictValue","datasetOrderHashValue","setDatasetOrderHashValue","TaskidValue","setTaskidValue","statusEncryptandUpload","setstatusEncryptandUpload","statusencryptuploadbutton","setstatusencryptuploadbutton","statusDeploytext","setdeploytext","statussecrettext","setsecrettext","statusDeploy","setstatusDeploy","runapplaoding","setrunapplaoding","disablestoragebutton","setdisablestoragebutton","storagetext","setstoragetext","appstatusdeal","setappstatusdeal","appstatus","setappstatus","deploydatasetref","useRef","pushtosmsref","teeref","ms","res","setTimeout","classes","dataset","generateEncryptionKey","InputText","FilesData","CircularProgress","Error","fileBytes","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","onerror","onabort","oldArray","encrypted","encrypt","checksum","computeEncryptedFileChecksum","multiaddr","add","toString","publicUrl","fetch","ok","current","scrollIntoView","block","behavior","status","index","owner","deployDataset","id","ref","pushDatasetSecret","datasetprice","volume","apprestrict","requesterrestrict","tag","signedOrder","order","signDatasetorder","createDatasetorder","orderHash","publishDatasetorder","fetchDatasetorder","txHash","cancelDatasetorder","storageToken","storage","defaultStorageLogin","pushStorageToken","forceUpdate","isStorageInitialized","checkStorageTokenExists","checkStorage","appAddress","datasetAddress","orders","appOrders","fetchAppOrderbook","minTag","appOrder","datasetOrder","fetchDatasetOrderbook","requester","workerpoolOrders","fetchWorkerpoolOrderbook","workerpool","app","workerpoolOrder","requestOrderToSign","createRequestorder","appmaxprice","appprice","datasetmaxprice","workerpoolmaxprice","workerpoolprice","params","iexec_developer_logger","category","requestOrder","signRequestorder","dealid","matchOrders","apporder","datasetorder","requestorder","workerpoolorder","dealUrl","deal","show","tasks","task","fetchResults","blob","fileName","link","document","createElement","URL","createObjectURL","click","navigator","msSaveOrOpenBlob","targetNetwork","Web3Modal","cacheProvider","providerOptions","clearCachedProvider","ethereum","App","setWriteProvider","setiexec","selectedChainId","_network","localChainId","networkDisplay","right","closable","ethProvider","_chainId","_accounts","request","method","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","web3provider","Web3Provider","IExec","isNative","smsURL","route","setRoute","pathname","faucetHint","faucetAvailable","connection","faucetClicked","setFaucetClicked","role","aria-label","textAlign","selectedKeys","Item","exact","bottom","align","gutter","span","ReactDOM","render","ThemeProvider","getElementById","content","ipfsGateway","ipfs","Ipfs","create","cid","pin","timeout","catch","arrayBuffer","Buffer","from","get","stop"],"mappings":"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","file":"static/js/main.4c747ae7.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport NavBar from \"ui-kit/components/NavBar\";\r\nimport Button from \"ui-kit/components/Button\";\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an Address, Balance, and Wallet as one Account component,\r\n  also allows users to log in to existing accounts and log out\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Account\r\n    address={address}\r\n    provider={provider}\r\n    provider={provider}\r\n    provider={provider}\r\n    price={price}\r\n    web3Modal={web3Modal}\r\n    loadWeb3Modal={loadWeb3Modal}\r\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n    blockExplorer={blockExplorer}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address={address} and get balance corresponding to the given address\r\n  - Provide provider={provider} to access balance on local network\r\n  - Provide provider={provider} to display a wallet\r\n  - Provide provider={provider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\")\r\n  - Provide price={price} of ether and get your balance converted to dollars\r\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n              to be able to log in/log out to/from existing accounts\r\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\r\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\r\n*/\r\n\r\nexport default function Account({\r\n  address,\r\n  provider,\r\n  price,\r\n  minimized,\r\n  web3Modal,\r\n  loadWeb3Modal,\r\n  logoutOfWeb3Modal,\r\n  blockExplorer,\r\n}) {\r\n  const tabsValues = [\r\n    {\r\n      value: \"tab1\",\r\n      label: \"NFT Builder\",\r\n    },\r\n  ];\r\n\r\n\r\n  const [activeTab, setActiveTab] = useState(tabsValues[0].value);\r\n  const handleTabSelect = (value) => setActiveTab(value);\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  const toggleLogin = () => {\r\n    loadWeb3Modal();\r\n    setIsLoggedIn(!isLoggedIn);\r\n  }\r\n  const userAddress = address;\r\n\r\n\r\n  const availableNetworks = [\r\n    {\r\n      value: \"1\",\r\n      label: \"iExec Sidechain testnet\",\r\n    }\r\n  ];\r\n  const [currentNetwork, setCurrentNetwork] = useState(\r\n    availableNetworks[0].value\r\n  );\r\n  const handleNetworkSelect = (value) => setCurrentNetwork(value);\r\n  const modalButtons = [];\r\n  if (web3Modal) {\r\n    if (web3Modal.cachedProvider) {\r\n      \r\n      modalButtons.push(\r\n        <Button\r\n          key=\"logoutbutton\"\r\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\r\n          shape=\"round\"\r\n          size=\"large\"\r\n          onClick={logoutOfWeb3Modal}\r\n        >\r\n          Logout\r\n        </Button>,\r\n      );\r\n    } else {\r\n      modalButtons.push(\r\n        <Button\r\n          key=\"loginbutton\"\r\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\r\n          shape=\"round\"\r\n          size=\"large\"\r\n          /*type={minimized ? \"default\" : \"primary\"}     too many people just defaulting to MM and having a bad time*/\r\n          onClick={loadWeb3Modal}\r\n        >\r\n          Connect\r\n        </Button>,\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      \r\n        <NavBar\r\n          title=\"Datahub\"\r\n          tabs={{\r\n            values: tabsValues,\r\n            value: activeTab,\r\n            onSelect: handleTabSelect,\r\n          }}\r\n          login={{\r\n            isLoggedIn,\r\n            onLoginClick: toggleLogin,\r\n            onLogoutClick: toggleLogin,\r\n            address: userAddress,\r\n            onAddressClick: () => alert(\"onAddressClick\"),\r\n          }}\r\n          network={{\r\n            values: availableNetworks,\r\n            value: currentNetwork,\r\n            onSelect: handleNetworkSelect,\r\n            disabled: isLoggedIn,\r\n          }}\r\n          extraButtons={[\r\n            {\r\n              icon: (\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                  <path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"></path>\r\n                  <line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>\r\n                </svg>\r\n              ),\r\n              label: \"extra button\",\r\n              onClick: () => alert(\"clicked\"),\r\n            },\r\n          \r\n          ]}\r\n        />\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n","// MY INFURA_ID, SWAP IN YOURS FROM https://infura.io/dashboard/ethereum\r\nexport const INFURA_ID = \"47354c4ae0f24d918a987cd667da4f15\";\r\n\r\n//MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\r\nexport const ETHERSCAN_KEY = \"PSW8C433Q667DVEX5BCRMGNAH9FSGFZ7Q8\";\r\n\r\n//BLOCKNATIVE ID FOR Notify.js:\r\nexport const BLOCKNATIVE_DAPPID = \"0b58206a-f3c0-4701-a62f-73c7243e8c77\";\r\n\r\nexport const NETWORK = chainId => {\r\n  for (let n in NETWORKS) {\r\n    if (NETWORKS[n].chainId === chainId) {\r\n      return NETWORKS[n];\r\n    }\r\n  }\r\n};\r\n\r\n// \"Beeple EDM\" Dummy Prize NFT\r\nexport const SAMPLE_JSON_URI = \"https://api.jsonbin.io/b/6096ed6b8211bb127e382e89\";\r\n// Liens of new york\r\nexport const LIENS_OF_NEW_YORK_URI = \"https://api.jsonbin.io/b/608432b348f71c7a71cd4389/3\";\r\n\r\nexport const STARRY_NIGHT = \"https://api.jsonbin.io/b/6097eec87a19ef1245a63194\";\r\n\r\n// \"Golden Ticket\"; raffle owners can use their own ticket NFT template if they choose\"\r\n// Using \"Dice Roll\" for now\r\n\r\n\r\n\r\n// https://hardhat.org/metamask-issue.html\r\n// metamask assumes 1337 so you need to change its chain ID for local network\r\nexport const NETWORKS = {\r\n  localhost: {\r\n    name: \"localhost\",\r\n    color: \"#666666\",\r\n    chainId: 31337,\r\n    blockExplorer: \"\",\r\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\r\n  },\r\n  mainnet: {\r\n    name: \"mainnet\",\r\n    color: \"#ff8b9e\",\r\n    chainId: 1,\r\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\r\n    blockExplorer: \"https://etherscan.io/\",\r\n  },\r\n  kovan: {\r\n    name: \"kovan\",\r\n    color: \"#7003DD\",\r\n    chainId: 42,\r\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\r\n    blockExplorer: \"https://kovan.etherscan.io/\",\r\n    faucet: \"https://gitter.im/kovan-testnet/faucet\", //https://faucet.kovan.network/\r\n  },\r\n  rinkeby: {\r\n    name: \"rinkeby\",\r\n    color: \"#e0d068\",\r\n    chainId: 4,\r\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\r\n    faucet: \"https://faucet.rinkeby.io/\",\r\n    blockExplorer: \"https://rinkeby.etherscan.io/\",\r\n  },\r\n  ropsten: {\r\n    name: \"ropsten\",\r\n    color: \"#F60D09\",\r\n    chainId: 3,\r\n    faucet: \"https://faucet.ropsten.be/\",\r\n    blockExplorer: \"https://ropsten.etherscan.io/\",\r\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\r\n  },\r\n  goerli: {\r\n    name: \"goerli\",\r\n    color: \"#0975F6\",\r\n    chainId: 5,\r\n    faucet: \"https://goerli-faucet.slock.it/\",\r\n    blockExplorer: \"https://goerli.etherscan.io/\",\r\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\r\n  },\r\n  xdai: {\r\n    name: \"xdai\",\r\n    color: \"#48a9a6\",\r\n    chainId: 100,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://dai.poa.network\",\r\n    faucet: \"https://xdai-faucet.top/\",\r\n    blockExplorer: \"https://blockscout.com/poa/xdai/\",\r\n  },\r\n  matic: {\r\n    name: \"matic\",\r\n    color: \"#2bbdf7\",\r\n    chainId: 137,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com\",\r\n    faucet: \"https://faucet.matic.network/\",\r\n    blockExplorer: \"https://explorer-mainnet.maticvigil.com//\",\r\n  },\r\n  mumbai: {\r\n    name: \"mumbai\",\r\n    color: \"#92D9FA\",\r\n    chainId: 80001,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\r\n    faucet: \"https://faucet.matic.network/\",\r\n    blockExplorer: \"https://mumbai-explorer.matic.today/\",\r\n  },\r\n  iExecSidechain: {\r\n    name: \"iExec Test Sidechain\",\r\n    color: \"#92D9FA\",\r\n    chainId: 133,\r\n    gasPrice: 0,\r\n    rpcUrl: \"https://viviani.iex.ec\",\r\n    faucet: \"https://faucet.iex.ec/viviani\",\r\n    blockExplorer: \"https://explorer.iex.ec/viviani/\",\r\n  },\r\n\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getAddress } from \"@ethersproject/address\";\r\nimport { useLocalStorage } from \".\"\r\n\r\n// resolved if(name){} to not save \"\" into cache \r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Gets ENS name from given address and provider\r\n\r\n  ~ How can I use? ~\r\n\r\n  const ensName = useLookupAddress(mainnetProvider, address);\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address and get ENS name corresponding to given address\r\n*/\r\n\r\nconst lookupAddress = async (provider, address) => {\r\n  try {\r\n    // Accuracy of reverse resolution is not enforced.\r\n    // We then manually ensure that the reported ens name resolves to address\r\n    const reportedName = await provider.lookupAddress(address);\r\n    \r\n    const resolvedAddress = await provider.resolveName(reportedName);\r\n\r\n    if (getAddress(address) === getAddress(resolvedAddress)) {\r\n      return reportedName;\r\n    }\r\n  } catch (e) {\r\n    // Do nothing\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst useLookupAddress = (provider, address) => {\r\n  const [ensName, setEnsName] = useState(address);\r\n  const [ensCache, setEnsCache] = useLocalStorage('ensCache_'+address);\r\n\r\n  useEffect(() => {\r\n    if( ensCache && ensCache.timestamp>Date.now()){\r\n      setEnsName(ensCache.name)\r\n    }else{\r\n      if (provider) {\r\n        lookupAddress(provider, address).then((name) => {\r\n          if (name) {\r\n            setEnsName(name);\r\n            setEnsCache({\r\n              timestamp:Date.now()+360000,\r\n              name:name\r\n            })\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [ensCache, provider, address, setEnsName, setEnsCache]);\r\n\r\n  return ensName;\r\n};\r\n\r\nexport default useLookupAddress;\r\n","import { useState } from 'react';\r\n// Hook from useHooks! (https://usehooks.com/useLocalStorage/)\r\nexport default function useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = value => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n","import React from \"react\";\r\nimport Blockies from \"react-blockies\";\r\nimport { Typography, Skeleton } from \"antd\";\r\nimport { useLookupAddress } from \"../hooks\";\r\n\r\n\r\n// changed value={address} to address={address}\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an address with a blockie image and option to copy address\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Address\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    blockExplorer={blockExplorer}\r\n    fontSize={fontSize}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\")\r\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\r\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\r\n  - Provide fontSize={fontSize} to change the size of address text\r\n*/\r\n\r\nconst { Text } = Typography;\r\n\r\nconst blockExplorerLink = (address, blockExplorer) => `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\r\n\r\nexport default function Address(props) {\r\n\r\n  const address = props.value || props.address;\r\n\r\n  const ens = useLookupAddress(props.ensProvider, address);\r\n\r\n  \r\n\r\n  if (!address) {\r\n    return (\r\n      <span>\r\n        <Skeleton avatar paragraph={{ rows: 1 }} />\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let displayAddress = address.substr(0, 6);\r\n\r\n  if (ens && ens.indexOf(\"0x\")<0) {\r\n    displayAddress = ens;\r\n  } else if (props.size === \"short\") {\r\n    displayAddress += \"...\" + address.substr(-4);\r\n  } else if (props.size === \"long\") {\r\n    displayAddress = address;\r\n  }\r\n\r\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\r\n  if (props.minimized) {\r\n    return (\r\n      <span style={{ verticalAlign: \"middle\" }}>\r\n        <a target={\"_blank\"} href={etherscanLink} rel=\"noopener noreferrer\">\r\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\r\n        </a>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let text;\r\n  if (props.onChange) {\r\n    text = (\r\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\r\n        <a  target={\"_blank\"} href={etherscanLink} rel=\"noopener noreferrer\">\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  } else {\r\n    text = (\r\n      <Text copyable={{ text: address }}>\r\n        <a  target={\"_blank\"} href={etherscanLink} rel=\"noopener noreferrer\">\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <span style={{ verticalAlign: \"middle\" }}>\r\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize?props.fontSize/7:4} />\r\n      </span>\r\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize?props.fontSize:28 }}>{text}</span>\r\n    </span>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Blockies from \"react-blockies\";\r\n\r\n// provides a blockie image for the address using \"react-blockies\" library\r\n\r\nexport default function Blockie(props) {\r\n  if (!props.address || typeof props.address.toLowerCase !== \"function\") {\r\n    return <span />;\r\n  }\r\n  // eslint-disable-next-line react/jsx-props-no-spreading\r\n  return <Blockies seed={props.address.toLowerCase()} {...props} />;\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport QrReader from \"react-qr-reader\";\r\nimport { CameraOutlined, QrcodeOutlined } from \"@ant-design/icons\";\r\nimport { Input, Badge } from \"antd\";\r\nimport { useLookupAddress } from \"eth-hooks\";\r\nimport Blockie from \"./Blockie\";\r\n\r\n// probably we need to change value={toAddress} to address={toAddress}\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an address input with QR scan option\r\n\r\n  ~ How can I use? ~\r\n\r\n  <AddressInput\r\n    autoFocus\r\n    ensProvider={mainnetProvider}\r\n    placeholder=\"Enter address\"\r\n    value={toAddress}\r\n    onChange={setToAddress}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n  - Provide placeholder=\"Enter address\" value for the input\r\n  - Value of the address input is stored in value={toAddress}\r\n  - Control input change by onChange={setToAddress} \r\n                          or onChange={address => { setToAddress(address);}}\r\n*/\r\n\r\nexport default function AddressInput(props) {\r\n  const [value, setValue] = useState(props.value);\r\n  const [scan, setScan] = useState(false);\r\n\r\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\r\n  const ens = useLookupAddress(props.ensProvider, currentValue);\r\n\r\n  const scannerButton = (\r\n    <div\r\n      style={{ marginTop: 4, cursor: \"pointer\" }}\r\n      onClick={() => {\r\n        setScan(!scan);\r\n      }}\r\n    >\r\n      <Badge count={<CameraOutlined style={{ fontSize: 9 }} />}>\r\n        <QrcodeOutlined style={{ fontSize: 18 }} />\r\n      </Badge>{\" \"}\r\n      Scan\r\n    </div>\r\n  );\r\n\r\n  const {ensProvider, onChange} = props;\r\n  const updateAddress = useCallback(\r\n    async newValue => {\r\n      if (typeof newValue !== \"undefined\") {\r\n        let address = newValue;\r\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\r\n          try {\r\n            const possibleAddress = await ensProvider.resolveName(address);\r\n            if (possibleAddress) {\r\n              address = possibleAddress;\r\n            }\r\n            // eslint-disable-next-line no-empty\r\n          } catch (e) {}\r\n        }\r\n        setValue(address);\r\n        if (typeof onChange === \"function\") {\r\n          onChange(address);\r\n        }\r\n      }\r\n    },\r\n    [ensProvider, onChange],\r\n  );\r\n\r\n  const scanner = scan ? (\r\n    <div\r\n      style={{\r\n        zIndex: 256,\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n        width: \"100%\",\r\n      }}\r\n      onClick={() => {\r\n        setScan(false);\r\n      }}\r\n    >\r\n      <QrReader\r\n        delay={250}\r\n        resolution={1200}\r\n        onError={e => {\r\n          console.log(\"SCAN ERROR\", e);\r\n          setScan(false);\r\n        }}\r\n        onScan={newValue => {\r\n          if (newValue) {\r\n            console.log(\"SCAN VALUE\", newValue);\r\n            let possibleNewValue = newValue;\r\n            if (possibleNewValue.indexOf(\"/\") >= 0) {\r\n              possibleNewValue = possibleNewValue.substr(possibleNewValue.lastIndexOf(\"0x\"));\r\n              console.log(\"CLEANED VALUE\", possibleNewValue);\r\n            }\r\n            setScan(false);\r\n            updateAddress(possibleNewValue);\r\n          }\r\n        }}\r\n        style={{ width: \"100%\" }}\r\n      />\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {scanner}\r\n      <Input\r\n        autoComplete=\"off\"\r\n        autoFocus={props.autoFocus}\r\n        placeholder={props.placeholder ? props.placeholder : \"address\"}\r\n        prefix={<Blockie address={currentValue} size={8} scale={3} />}\r\n        value={ens || currentValue}\r\n        addonAfter={scannerButton}\r\n        onChange={e => {\r\n          updateAddress(e.target.value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\n\r\n// small change in useEffect, display currentValue if it's provided by user\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays input field for ETH/USD amount, with an option to convert between ETH and USD\r\n\r\n  ~ How can I use? ~\r\n\r\n  <EtherInput\r\n    autofocus\r\n    price={price}\r\n    value=100\r\n    placeholder=\"Enter amount\"\r\n    onChange={value => {\r\n      setAmount(value);\r\n    }}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide price={price} of ether and easily convert between USD and ETH\r\n  - Provide value={value} to specify initial amount of ether\r\n  - Provide placeholder=\"Enter amount\" value for the input\r\n  - Control input change by onChange={value => { setAmount(value);}}\r\n*/\r\n\r\nexport default function EtherInput(props) {\r\n  const [mode, setMode] = useState(props.price ? \"USD\" : \"ETH\");\r\n  const [display, setDisplay] = useState();\r\n  const [value, setValue] = useState();\r\n\r\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\r\n\r\n  const option = title => {\r\n    if (!props.price) return \"\";\r\n    return (\r\n      <div\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={() => {\r\n          if (mode === \"USD\") {\r\n            setMode(\"ETH\");\r\n            setDisplay(currentValue);\r\n          } else {\r\n            setMode(\"USD\");\r\n            if (currentValue) {\r\n              const usdValue = \"\" + (parseFloat(currentValue) * props.price).toFixed(2);\r\n              setDisplay(usdValue);\r\n            } else {\r\n              setDisplay(currentValue);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {title}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  let prefix;\r\n  let addonAfter;\r\n  if (mode === \"USD\") {\r\n    prefix = \"$\";\r\n    addonAfter = option(\"USD 🔀\");\r\n  } else {\r\n    prefix = \"Ξ\";\r\n    addonAfter = option(\"ETH 🔀\");\r\n  }\r\n\r\n  useEffect(\r\n    ()=>{\r\n      if(!currentValue){\r\n        setDisplay(\"\");\r\n      }\r\n    }\r\n  ,[ currentValue ])\r\n\r\n  return (\r\n    <Input\r\n      placeholder={props.placeholder ? props.placeholder : \"amount in \" + mode}\r\n      autoFocus={props.autoFocus}\r\n      prefix={prefix}\r\n      value={display}\r\n      addonAfter={addonAfter}\r\n      onChange={async e => {\r\n        const newValue = e.target.value;\r\n        if (mode === \"USD\") {\r\n          const possibleNewValue = parseFloat(newValue)\r\n          if(possibleNewValue){\r\n            const ethValue = possibleNewValue / props.price;\r\n            setValue(ethValue);\r\n            if (typeof props.onChange === \"function\") {\r\n              props.onChange(ethValue);\r\n            }\r\n            setDisplay(newValue);\r\n          }else{\r\n            setDisplay(newValue);\r\n          }\r\n        } else {\r\n          setValue(newValue);\r\n          if (typeof props.onChange === \"function\") {\r\n            props.onChange(newValue);\r\n          }\r\n          setDisplay(newValue);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { formatEther } from \"@ethersproject/units\";\r\nimport { usePoller } from \"eth-hooks\";\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a balance of given address in ether & dollar\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Balance\r\n    address={address}\r\n    provider={mainnetProvider}\r\n    price={price}\r\n  />\r\n\r\n  ~ If you already have the balance as a bignumber ~\r\n  <Balance\r\n    balance={balance}\r\n    price={price}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address={address} and get balance corresponding to given address\r\n  - Provide provider={mainnetProvider} to access balance on mainnet or any other network (ex. localProvider)\r\n  - Provide price={price} of ether and get your balance converted to dollars\r\n*/\r\n\r\n\r\nexport default function Balance(props) {\r\n  const [dollarMode, setDollarMode] = useState(true);\r\n  const [balance, setBalance] = useState();\r\n\r\n  const getBalance = async () => {\r\n    if (props.address && props.provider) {\r\n      try {\r\n        const newBalance = await props.provider.getBalance(props.address);\r\n        setBalance(newBalance);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  usePoller(\r\n    () => {\r\n      getBalance();\r\n    },\r\n    props.pollTime ? props.pollTime : 11999,\r\n  );\r\n\r\n  let floatBalance = parseFloat(\"0.00\");\r\n\r\n  let usingBalance = balance;\r\n\r\n  if (typeof props.balance !== \"undefined\") {\r\n    usingBalance = props.balance;\r\n  }\r\n  if (typeof props.value !== \"undefined\") {\r\n    usingBalance = props.value;\r\n  }\r\n\r\n  if (usingBalance) {\r\n    const etherBalance = formatEther(usingBalance);\r\n    parseFloat(etherBalance).toFixed(2);\r\n    floatBalance = parseFloat(etherBalance);\r\n  }\r\n\r\n  let displayBalance = floatBalance.toFixed(4);\r\n\r\n  const price = props.price || props.dollarMultiplier\r\n\r\n  if (price && dollarMode) {\r\n    displayBalance = \"$\" + (floatBalance * price).toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        verticalAlign: \"middle\",\r\n        fontSize: props.size ? props.size : 24,\r\n        padding: 8,\r\n        cursor: \"pointer\",\r\n      }}\r\n      onClick={() => {\r\n        setDollarMode(!dollarMode);\r\n      }}\r\n    >\r\n      {displayBalance}\r\n    </span>\r\n  );\r\n}\r\n","import { hexlify } from \"@ethersproject/bytes\";\r\nimport { notification } from \"antd\";\r\nimport { BLOCKNATIVE_DAPPID, } from \"../constants\";\r\n\r\nimport Notify from \"bnc-notify\";\r\n\r\n// this should probably just be renamed to \"notifier\"\r\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\r\n// https://docs.blocknative.com/notify\r\n\r\nexport default function Transactor(provider, gasPrice, etherscan) {\r\n  if (typeof provider !== \"undefined\") {\r\n    // eslint-disable-next-line consistent-return\r\n    return async tx => {\r\n\r\n      const signer = provider.getSigner();\r\n      const network = await provider.getNetwork();\r\n      const options = {\r\n        dappId: BLOCKNATIVE_DAPPID, // GET YOUR OWN KEY AT https://account.blocknative.com\r\n        system: \"ethereum\",\r\n        networkId: network.chainId,\r\n        //darkMode: true, // (default: false)\r\n        transactionHandler: txInformation => {\r\n          console.log(\"HANDLE TX\", txInformation);\r\n        },\r\n      };\r\n      const notify = Notify(options);\r\n\r\n      let etherscanNetwork = \"\";\r\n      if (network.name && network.chainId > 1) {\r\n        etherscanNetwork = network.name + \".\";\r\n      }\r\n\r\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\r\n      if (network.chainId === 100) {\r\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\r\n      }\r\n\r\n      try {\r\n        let result;\r\n        if (tx instanceof Promise) {\r\n          result = await tx;\r\n        } else {\r\n          if (!tx.gasPrice) {\r\n            tx.gasPrice = 0;\r\n          }\r\n          if (!tx.gasLimit) {\r\n            tx.gasLimit = hexlify(120000);\r\n          }\r\n          console.log(\"RUNNING TX\", tx);\r\n          result = await signer.sendTransaction(tx);\r\n        }\r\n        console.log(\"RESULT:\", result);\r\n        console.log(\"Notify\", notify);\r\n\r\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\r\n        if ([1, 3, 4, 5, 42, 100].indexOf(network.chainId) >= 0) {\r\n          const { emitter } = notify.hash(result.hash);\r\n          emitter.on(\"all\", transaction => {\r\n            return {\r\n              onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\r\n            };\r\n          });\r\n        } else {\r\n          notification.info({\r\n            message: \"Transaction Sent\",\r\n            description: result.hash,\r\n            placement: \"bottomRight\",\r\n          });\r\n        }\r\n\r\n        return result;\r\n      } catch (e) {\r\n        console.log(e);\r\n        console.log(\"Transaction Error:\", e.message);\r\n        notification.error({\r\n          message: \"Transaction Error\",\r\n          description: e.message,\r\n        });\r\n      }\r\n    };\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { WalletOutlined, QrcodeOutlined, SendOutlined, KeyOutlined } from \"@ant-design/icons\";\r\nimport { Tooltip, Spin, Modal, Button, Typography } from \"antd\";\r\nimport QR from \"qrcode.react\";\r\nimport { parseEther } from \"@ethersproject/units\";\r\nimport { useUserAddress } from \"eth-hooks\";\r\nimport { Transactor } from \"../helpers\";\r\nimport Address from \"./Address\";\r\nimport Balance from \"./Balance\";\r\nimport AddressInput from \"./AddressInput\";\r\nimport EtherInput from \"./EtherInput\";\r\nimport { ethers } from \"ethers\";\r\nconst { Text, Paragraph } = Typography;\r\n\r\n\r\nexport default function Wallet(props) {\r\n  const signerAddress = useUserAddress(props.provider);\r\n  const selectedAddress = props.address || signerAddress;\r\n\r\n  const [open, setOpen] = useState();\r\n  const [qr, setQr] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [toAddress, setToAddress] = useState();\r\n  const [pk, setPK] = useState()\r\n\r\n  const providerSend = props.provider ? (\r\n    <Tooltip title=\"Wallet\">\r\n      <WalletOutlined\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n        rotate={-90}\r\n        style={{\r\n          padding: 7,\r\n          color: props.color ? props.color : \"\",\r\n          cursor: \"pointer\",\r\n          fontSize: 28,\r\n          verticalAlign: \"middle\",\r\n        }}\r\n      />\r\n    </Tooltip>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  let display;\r\n  let receiveButton;\r\n  let privateKeyButton\r\n  if (qr) {\r\n    display = (\r\n      <div>\r\n        <div>\r\n          <Text copyable>{selectedAddress}</Text>\r\n        </div>\r\n        <QR\r\n          value={selectedAddress}\r\n          size=\"450\"\r\n          level=\"H\"\r\n          includeMargin\r\n          renderAs=\"svg\"\r\n          imageSettings={{ excavate: false }}\r\n        />\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Hide\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n     <Button key=\"hide\" onClick={()=>{setPK(selectedAddress);setQr(\"\")}}>\r\n       <KeyOutlined /> Private Key\r\n     </Button>\r\n   )\r\n }else if(pk){\r\n\r\n   let pk = localStorage.getItem(\"metaPrivateKey\")\r\n   let wallet = new ethers.Wallet(pk)\r\n\r\n   if(wallet.address!==selectedAddress){\r\n     display = (\r\n       <div>\r\n         <b>*injected account*, private key unknown</b>\r\n       </div>\r\n     )\r\n   }else{\r\n\r\n     let extraPkDisplayAdded = {}\r\n     let extraPkDisplay = []\r\n     extraPkDisplayAdded[wallet.address] = true\r\n     extraPkDisplay.push(\r\n       <div style={{fontSize:16,padding:2,backgroundStyle:\"#89e789\"}}>\r\n          <a href={\"/pk#\"+pk}>\r\n            <Address minimized={true} address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0,6)}\r\n          </a>\r\n       </div>\r\n     )\r\n     for (var key in localStorage){\r\n       if(key.indexOf(\"metaPrivateKey_backup\")>=0){\r\n         console.log(key)\r\n         let pastpk = localStorage.getItem(key)\r\n         let pastwallet = new ethers.Wallet(pastpk)\r\n         if(!extraPkDisplayAdded[pastwallet.address] /*&& selectedAddress!=pastwallet.address*/){\r\n           extraPkDisplayAdded[pastwallet.address] = true\r\n           extraPkDisplay.push(\r\n             <div style={{fontSize:16}}>\r\n                <a href={\"/pk#\"+pastpk}>\r\n                  <Address minimized={true} address={pastwallet.address} ensProvider={props.ensProvider} /> {pastwallet.address.substr(0,6)}\r\n                </a>\r\n             </div>\r\n           )\r\n         }\r\n       }\r\n     }\r\n\r\n\r\n     display = (\r\n       <div>\r\n         <b>Private Key:</b>\r\n\r\n         <div>\r\n          <Text copyable>{pk}</Text>\r\n          </div>\r\n\r\n          <hr/>\r\n\r\n         <i>Point your camera phone at qr code to open in\r\n           <a target=\"_blank\" href={\"https://xdai.io/\"+pk} rel=\"noopener noreferrer\">burner wallet</a>:\r\n         </i>\r\n         <QR value={\"https://xdai.io/\"+pk} size={\"450\"} level={\"H\"} includeMargin={true} renderAs={\"svg\"} imageSettings={{excavate:false}}/>\r\n\r\n         <Paragraph style={{fontSize:\"16\"}} copyable>{\"https://xdai.io/\"+pk}</Paragraph>\r\n\r\n         {extraPkDisplay?(\r\n           <div>\r\n             <h3>\r\n              Known Private Keys:\r\n             </h3>\r\n             {extraPkDisplay}\r\n             <Button onClick={()=>{\r\n               let currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\r\n               if(currentPrivateKey){\r\n                 window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);\r\n               }\r\n               const randomWallet = ethers.Wallet.createRandom()\r\n               const privateKey = randomWallet._signingKey().privateKey\r\n               window.localStorage.setItem(\"metaPrivateKey\",privateKey);\r\n               window.location.reload()\r\n             }}>\r\n              Generate\r\n             </Button>\r\n           </div>\r\n         ):\"\"}\r\n\r\n       </div>\r\n     )\r\n   }\r\n\r\n   receiveButton = (\r\n     <Button key=\"receive\" onClick={()=>{setQr(selectedAddress);setPK(\"\")}}>\r\n       <QrcodeOutlined /> Receive\r\n     </Button>\r\n   )\r\n   privateKeyButton = (\r\n     <Button key=\"hide\" onClick={()=>{setPK(\"\");setQr(\"\")}}>\r\n       <KeyOutlined /> Hide\r\n     </Button>\r\n   )\r\n  } else {\r\n    const inputStyle = {\r\n      padding: 10,\r\n    };\r\n\r\n    display = (\r\n      <div>\r\n        <div style={inputStyle}>\r\n          <AddressInput\r\n            autoFocus\r\n            ensProvider={props.ensProvider}\r\n            placeholder=\"to address\"\r\n            address={toAddress}\r\n            onChange={setToAddress}\r\n          />\r\n        </div>\r\n        <div style={inputStyle}>\r\n          <EtherInput\r\n            price={props.price}\r\n            value={amount}\r\n            onChange={value => {\r\n              setAmount(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"receive\"\r\n        onClick={() => {\r\n          setQr(selectedAddress);\r\n          setPK(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Receive\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button key=\"hide\" onClick={()=>{setPK(selectedAddress);setQr(\"\")}}>\r\n        <KeyOutlined /> Private Key\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      {providerSend}\r\n      <Modal\r\n        visible={open}\r\n        title={\r\n          <div>\r\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\r\n            <div style={{ float: \"right\", paddingRight: 25 }}>\r\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\r\n            </div>\r\n          </div>\r\n        }\r\n        onOk={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        onCancel={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        footer={[\r\n          privateKeyButton, receiveButton,\r\n          <Button\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            disabled={!amount || !toAddress || qr}\r\n            loading={false}\r\n            onClick={() => {\r\n              const tx = Transactor(props.provider);\r\n\r\n              let value;\r\n              try {\r\n                value = parseEther(\"\" + amount);\r\n              } catch (e) {\r\n                // failed to parseEther, try something else\r\n                value = parseEther(\"\" + parseFloat(amount).toFixed(8));\r\n              }\r\n\r\n              tx({\r\n                to: toAddress,\r\n                value,\r\n              });\r\n              setOpen(!open);\r\n              setQr();\r\n            }}\r\n          >\r\n            <SendOutlined /> Send\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {display}\r\n      </Modal>\r\n    </span>\r\n  );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { Input, Button, Tooltip } from \"antd\";\r\nimport Blockies from \"react-blockies\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\nimport { parseEther } from \"@ethersproject/units\";\r\nimport { Transactor } from \"../helpers\";\r\nimport Wallet from \"./Wallet\";\r\nimport { useLookupAddress } from \"eth-hooks\";\r\n\r\n// improved a bit by converting address to ens if it exists\r\n// added option to directly input ens name\r\n// added placeholder option\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a local faucet to send ETH to given address, also wallet is provided\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Faucet \r\n    price={price}\r\n    localProvider={localProvider}  \r\n    ensProvider={mainnetProvider}\r\n    placeholder={\"Send local faucet\"}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide price={price} of ether and convert between USD and ETH in a wallet\r\n  - Provide localProvider={localProvider} to be able to send ETH to given address\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n              works both in input field & wallet\r\n  - Provide placeholder=\"Send local faucet\" value for the input\r\n*/\r\n\r\nexport default function Faucet(props) {\r\n  const [address, setAddress] = useState();\r\n\r\n  let blockie;\r\n  if (address && typeof address.toLowerCase === \"function\") {\r\n    blockie = <Blockies seed={address.toLowerCase()} size={8} scale={4} />;\r\n  } else {\r\n    blockie = <div />;\r\n  }\r\n\r\n  const ens = useLookupAddress(props.ensProvider, address);\r\n\r\n  const updateAddress = useCallback(\r\n    async newValue => {\r\n      if (typeof newValue !== \"undefined\") {\r\n        let address = newValue;\r\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\r\n          try {\r\n            const possibleAddress = await props.ensProvider.resolveName(address);\r\n            if (possibleAddress) {\r\n              address = possibleAddress;\r\n            }\r\n            // eslint-disable-next-line no-empty\r\n          } catch (e) {}\r\n        }\r\n        setAddress(address);\r\n      }\r\n    },\r\n    [props.ensProvider],\r\n  );\r\n\r\n  const tx = Transactor(props.localProvider);\r\n\r\n  return (\r\n    <span>\r\n      <Input\r\n        size=\"large\"\r\n        placeholder={props.placeholder ? props.placeholder : \"local faucet\"}\r\n        prefix={blockie}\r\n        //value={address}\r\n        value={ens || address}\r\n        onChange={e => {\r\n          //setAddress(e.target.value);\r\n          updateAddress(e.target.value);\r\n        }}\r\n        suffix={\r\n          <Tooltip title=\"Faucet: Send local ether to an address.\">\r\n            <Button\r\n              onClick={() => {\r\n                tx({\r\n                  to: address,\r\n                  value: parseEther(\"0.01\"),\r\n                });\r\n                setAddress(\"\");\r\n              }}\r\n              shape=\"circle\"\r\n              icon={<SendOutlined />}\r\n            />\r\n            <Wallet color=\"#888888\" provider={props.localProvider} ensProvider={props.ensProvider} price={props.price} />\r\n          </Tooltip>\r\n        }\r\n      />\r\n    </span>\r\n  );\r\n}\r\n","import React, {useMemo, useEffect} from \"react\";\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\n\r\nconst baseStyle = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out'\r\n  };\r\n  \r\n  const focusedStyle = {\r\n    borderColor: '#fcd15a'\r\n  };\r\n  \r\n  const acceptStyle = {\r\n    borderColor: '#fcd15a'\r\n  };\r\n  \r\n  const rejectStyle = {\r\n    borderColor: '#ff1744'\r\n  };\r\n\r\nexport default function DragandDrop(props){\r\n    \r\n    const {\r\n        acceptedFiles,\r\n        getRootProps,\r\n        getInputProps,\r\n        isFocused,\r\n        isDragAccept,\r\n        isDragReject\r\n      } = useDropzone();\r\n    const files = acceptedFiles.map(file => (\r\n      <li key={file.path}>\r\n        {file.path} - {file.size} bytes\r\n      </li>\r\n    ));\r\n    useEffect(() => {\r\n    if(acceptedFiles){\r\n        props.parentCallback(acceptedFiles);\r\n      }\r\n      }, [acceptedFiles]);\r\n      \r\n  \r\n    \r\n      const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isFocused ? focusedStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n      }), [\r\n        isFocused,\r\n        isDragAccept,\r\n        isDragReject\r\n      ]);\r\n    \r\n  \r\n    return (\r\n      <section className=\"container\">\r\n        <div className=\"container\">\r\n      <div {...getRootProps({style})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop your dataset file here, or click to select a file</p>\r\n      </div>\r\n    </div>\r\n        <aside>\r\n          <h4>File</h4>\r\n          <ul>{files}</ul>\r\n        </aside>\r\n        \r\n      </section>\r\n\r\n    );\r\n  }","import React, { useState, useRef } from \"react\";\r\nimport Button from \"ui-kit/components/Button\";\r\nimport InputText from \"ui-kit/components/InputText\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DragandDrop from \"../components/DragandDrop\";\r\nimport CircularProgress from \"ui-kit/components/CircularProgress\";\r\nimport { add } from \"../services/ipfs-service\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    width: \"70%\",\r\n    paddingTop: \"50px\",\r\n    paddingLeft: \"20px\",\r\n    flexDirection: \"column\",\r\n    flex: 1,\r\n  },\r\n  input: {\r\n    paddingTop: \"25px\",\r\n    width: 600,\r\n    maxWidth: 800,\r\n  },\r\n  divider: {\r\n    marginTop: \"20px\",\r\n    marginLeft: \"0px\",\r\n    height: \"200px\",\r\n  },\r\n  dividerlast: {\r\n    marginTop: \"20px\",\r\n    marginLeft: \"0px\",\r\n    height: \"300px\",\r\n  },\r\n  dividertee: {\r\n    height: \"40px\",\r\n  },\r\n  deploydataset: {\r\n    paddingTop: \"400px\",\r\n  },\r\n  pushtEncryptionkeytosms: {\r\n    paddingTop: \"200px\",\r\n  },\r\n  publishteedatasetorder: {\r\n    paddingTop: \"200px\",\r\n  },\r\n  orderbook: {\r\n    paddingTop: \"200px\",\r\n  },\r\n});\r\n\r\nexport default function Home({ address, readProvider, writeProvider, contracts, tx, iexec }) {\r\n  const [Key, setKey] = useState(\"\");\r\n  const [Files, setFiles] = useState([]);\r\n\r\n  const [encryptionKeyValue, setEncryptionValue] = useState(\"\");\r\n  const handleEncryptionkeyChange = e => setEncryptionValue(e.target.value);\r\n  const [datasetNameValue, setDatasetNameValue] = useState(\"\");\r\n  const handleDatasetNameChange = e => setDatasetNameValue(e.target.value);\r\n  const [dataseturlipfsValue, setDataseturlipfsValue] = useState(\"\");\r\n  const handleDataseturlipfsChange = e => setDataseturlipfsValue(e.target.value);\r\n  const [datasetChecksumValue, setDatasetChecksumValue] = useState(\"\");\r\n  const handleDatasetChecksumChange = e => setDatasetChecksumValue(e.target.value);\r\n  const [datasetEncryptionKeyValue, setDatasetEncryptionKeyValue] = useState(\"\");\r\n  const handleDatasetEncryptionKeyChange = e => setDatasetEncryptionKeyValue(e.target.value);\r\n  const [datasetAddressValue, setDatasetAddressValue] = useState(\"\");\r\n  const handleDatasetAddressChange = e => setDatasetAddressValue(e.target.value);\r\n  const [datasetVolumeValue, setDatasetVolumeValue] = useState(\"\");\r\n  const handleDatasetVolumeChange = e => setDatasetVolumeValue(e.target.value);\r\n  const [datasetAppRestrictValue, setDatasetAppRestrictValue] = useState(\"0x0000000000000000000000000000000000000000\");\r\n  const handleDatasetAppRestrictChange = e => setDatasetAppRestrictValue(e.target.value);\r\n  const [datasetRequesterRestrictValue, setDatasetRequesterRestrictValue] = useState(\r\n    \"0x0000000000000000000000000000000000000000\",\r\n  );\r\n  const handleDatasetRequesterRestrictChange = e => setDatasetRequesterRestrictValue(e.target.value);\r\n  const [datasetOrderHashValue, setDatasetOrderHashValue] = useState(\"\");\r\n  const handleDatasetOrderHashChange = e => setDatasetOrderHashValue(e.target.value);\r\n  const [TaskidValue, setTaskidValue] = useState(\"\");\r\n  const handleTaskidChange = e => setTaskidValue(e.target.value);\r\n\r\n  const [statusEncryptandUpload, setstatusEncryptandUpload] = useState([]);\r\n  const [statusencryptuploadbutton, setstatusencryptuploadbutton] = useState(false);\r\n  const [statusDeploytext, setdeploytext] = useState(\"\");\r\n  const [statussecrettext, setsecrettext] = useState(\"\");\r\n  const [statusDeploy, setstatusDeploy] = useState(false);\r\n  const [runapplaoding, setrunapplaoding] = useState(false);\r\n\r\n  const [disablestoragebutton, setdisablestoragebutton] = useState(false);\r\n  const [storagetext, setstoragetext] = useState(\"\");\r\n  const [appstatusdeal, setappstatusdeal] = useState([]);\r\n  const [appstatus, setappstatus] = useState(\"\");\r\n\r\n  const deploydatasetref = useRef(null);\r\n  const pushtosmsref = useRef(null);\r\n  const teeref = useRef(null);\r\n\r\n  const handleCallback = FilesData => {\r\n    setFiles(FilesData);\r\n  };\r\n  const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n  const generateDatasetKey = async () => {\r\n    try {\r\n      const key = iexec.dataset.generateEncryptionKey();\r\n      setKey(key);\r\n      setEncryptionValue(key);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n     \r\n    }\r\n  };\r\n\r\n  const encryptDataset = async () => {\r\n    try {\r\n      setstatusencryptuploadbutton(true);\r\n      \r\n      const file = Files[0];\r\n      if (!file) {\r\n        throw Error(\"No file selected\");\r\n      }\r\n\r\n      setstatusEncryptandUpload([<p>Reading File {file.name} </p>]);\r\n      console.log(`Reading ${file.name}`);\r\n      const fileBytes = await new Promise((resolve, reject) => {\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsArrayBuffer(file);\r\n        fileReader.onload = e => resolve(e.target.result);\r\n        fileReader.onerror = () => reject(Error(`Failed to read file: ${fileReader.error}`));\r\n        fileReader.onabort = () => reject(Error(`Failed to read file: aborted`));\r\n      });\r\n\r\n      setstatusEncryptandUpload(oldArray => [...oldArray, <p>Encrypting {file.name} </p>]);\r\n\r\n      const encrypted = await iexec.dataset.encrypt(fileBytes, Key);\r\n\r\n      const checksum = await iexec.dataset.computeEncryptedFileChecksum(encrypted);\r\n\r\n      setstatusEncryptandUpload(oldArray => [...oldArray, <p>Uploading encrypted file to IPFS </p>]);\r\n\r\n      const cid = await add(encrypted);\r\n\r\n      const multiaddr = `/ipfs/${cid.toString()}`;\r\n      const publicUrl = `https://ipfs.io${multiaddr}`;\r\n\r\n      setDatasetNameValue(file.name);\r\n      setDataseturlipfsValue(multiaddr);\r\n      setDatasetChecksumValue(checksum);\r\n\r\n      setstatusEncryptandUpload(oldArray => [\r\n        ...oldArray,\r\n        <p>\r\n          Checking file on IPFS on <a href={publicUrl}>{publicUrl}</a>{\" \"}\r\n        </p>,\r\n      ]);\r\n      await delay(5000);\r\n\r\n      await fetch(publicUrl).then(res => {\r\n        if (!res.ok) {\r\n          throw Error(`Failed to load uploaded file at ${publicUrl}`);\r\n        }\r\n      });\r\n      setstatusencryptuploadbutton(false);\r\n      setstatusEncryptandUpload(oldArray => [\r\n        ...oldArray,\r\n        <p>File encrypted and uploded to IPFS (checksum {checksum}) </p>,\r\n      ]);\r\n      await delay(4000);\r\n\r\n      deploydatasetref.current.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n    } catch (error) {\r\n      console.log(error);\r\n      \r\n    } finally {\r\n      \r\n    }\r\n  };\r\n\r\n  const deploydataset = async () => {\r\n    try {\r\n      setstatusDeploy(true);\r\n      const owner = await iexec.wallet.getAddress();\r\n      const name = datasetNameValue;\r\n      const multiaddr = dataseturlipfsValue;\r\n      const checksum = datasetChecksumValue;\r\n      const { address } = await iexec.dataset.deployDataset({\r\n        owner,\r\n        name,\r\n        multiaddr,\r\n        checksum,\r\n      });\r\n\r\n      setstatusDeploy(false);\r\n      setdeploytext(`Dataset deployed at address ${address}`);\r\n\r\n      setDatasetEncryptionKeyValue(encryptionKeyValue);\r\n      setDatasetAddressValue(address);\r\n\r\n      await delay(4000);\r\n      pushtosmsref.current.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n    }\r\n  };\r\n  const pushsecret = async () => {\r\n    try {\r\n      await iexec.dataset.pushDatasetSecret(datasetAddressValue, datasetEncryptionKeyValue);\r\n\r\n      setsecrettext(`Encryption key pushed for datastet ${datasetAddressValue}`);\r\n      await delay(4000);\r\n      teeref.current.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      \r\n    }\r\n  };\r\n\r\n  const publishOrder = async () => {\r\n    try {\r\n      const dataset = datasetAddressValue;\r\n      const datasetprice = 0;\r\n      const volume = datasetVolumeValue;\r\n      const apprestrict = datasetAppRestrictValue;\r\n      const requesterrestrict = datasetRequesterRestrictValue;\r\n      const tag = [\"tee\"];\r\n      const signedOrder = await iexec.order.signDatasetorder(\r\n        await iexec.order.createDatasetorder({\r\n          dataset,\r\n          datasetprice,\r\n          volume,\r\n          apprestrict,\r\n          requesterrestrict,\r\n          tag,\r\n        }),\r\n      );\r\n      const orderHash = await iexec.order.publishDatasetorder(signedOrder);\r\n      console.log(`Order published with hash ${orderHash}`);\r\n      setDatasetOrderHashValue(orderHash);\r\n      alert(`Order published with hash ${orderHash}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n    }\r\n  };\r\n  const cancelOrder = async () => {\r\n    try {\r\n      const { order } = await iexec.orderbook.fetchDatasetorder(datasetOrderHashValue);\r\n      const { txHash } = await iexec.order.cancelDatasetorder(order);\r\n      alert(`Order canceled (tx:${txHash})`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n    }\r\n  };\r\n  const checkStorage = async () => {\r\n    try {\r\n      const isStorageInitialized = await iexec.storage.checkStorageTokenExists(await iexec.wallet.getAddress());\r\n      if (isStorageInitialized) setstoragetext(\"initialized\");\r\n      else setstoragetext(\"not initialized\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const initStorage = async () => {\r\n    try {\r\n      const storageToken = await iexec.storage.defaultStorageLogin();\r\n      await iexec.storage.pushStorageToken(storageToken, { forceUpdate: true });\r\n      checkStorage();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setdisablestoragebutton(true);\r\n    }\r\n  };\r\n  const appRun = async () => {\r\n    try {\r\n      setrunapplaoding(true);\r\n      const appAddress = \"0x4674570aAb12ad082857F3262c2F8D4DF09Aa498\";\r\n      const datasetAddress = datasetAddressValue;\r\n      const userAddress = await iexec.wallet.getAddress();\r\n\r\n      const { orders: appOrders } = await iexec.orderbook.fetchAppOrderbook(appAddress, {\r\n        minTag: [\"tee\"],\r\n      });\r\n      const appOrder = appOrders && appOrders[0] && appOrders[0].order;\r\n      if (!appOrder) throw Error(`no apporder found for app ${appAddress}`);\r\n      const datasetOrders = await iexec.orderbook.fetchDatasetOrderbook(datasetAddress, {\r\n        requester: userAddress,\r\n      });\r\n\r\n      const datasetOrder = datasetOrders.orders[0].order;\r\n\r\n      const workerpoolOrders = await iexec.orderbook.fetchWorkerpoolOrderbook({\r\n        workerpool: \"0x5210cD9C57546159Ac60DaC17B3e6cDF48674FBD\",\r\n        app: appAddress,\r\n        requester: userAddress,\r\n        minTag: [\"tee\"],\r\n      });\r\n      console.log(workerpoolOrders.orders[0].order);\r\n      const workerpoolOrder = workerpoolOrders.orders[0].order;\r\n\r\n      const requestOrderToSign = await iexec.order.createRequestorder({\r\n        app: appAddress,\r\n        appmaxprice: appOrder.appprice,\r\n        dataset: datasetAddress,\r\n        datasetmaxprice: datasetOrder.datasetprice,\r\n        workerpoolmaxprice: workerpoolOrder.workerpoolprice,\r\n        requester: userAddress,\r\n        volume: 1,\r\n        params: {\r\n          iexec_developer_logger: true,\r\n        },\r\n        tag: [\"tee\"],\r\n        category: workerpoolOrder.category,\r\n      });\r\n\r\n      const requestOrder = await iexec.order.signRequestorder(requestOrderToSign);\r\n      console.log(datasetOrder);\r\n      const { dealid } = await iexec.order.matchOrders({\r\n        apporder: appOrder,\r\n        datasetorder: datasetOrder,\r\n        requestorder: requestOrder,\r\n        workerpoolorder: workerpoolOrder,\r\n      });\r\n\r\n      const dealUrl = `https://explorer.iex.ec/viviani/deal/${dealid}`;\r\n      const deal = await iexec.deal.show(dealid);\r\n      setTaskidValue(deal.tasks[\"0\"]);\r\n      setappstatusdeal([\r\n        <p>\r\n          submitted deal ! check deal on <a href={dealUrl}>{dealUrl}</a>{\" \"}\r\n        </p>,\r\n      ]);\r\n      setappstatus(\"Task Running! this can take up to 5 minutes before downloading the task result\");\r\n      setrunapplaoding(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n    }\r\n  };\r\n\r\n  const dowloadResults = async () => {\r\n    try {\r\n      const res = await iexec.task.fetchResults(TaskidValue);\r\n      console.log(res);\r\n      const file = await res.blob();\r\n      console.log(file);\r\n      const fileName = `${TaskidValue}.zip`;\r\n      const link = document.createElement('a');\r\n      link.href = window.URL.createObjectURL(file);\r\n      link.click();\r\n      if (window.navigator.msSaveOrOpenBlob) window.navigator.msSaveOrOpenBlob(file, fileName);\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error.message);\r\n    } finally {\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className=\"prepareencryptionkey\">\r\n        <h2>Prepare Confidential NFT</h2>\r\n        <Button onClick={generateDatasetKey}>Generate Encryption Key</Button>\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Encryption key\"\r\n          value={encryptionKeyValue}\r\n          onChange={handleEncryptionkeyChange}\r\n          placeholder=\"base64 encoded aes 256 key\"\r\n        />\r\n        <DragandDrop parentCallback={handleCallback}></DragandDrop>\r\n        {statusencryptuploadbutton ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <Button onClick={encryptDataset}>Encrypt and Upload File</Button>\r\n        )}\r\n        <div>\r\n          {statusEncryptandUpload.map((status, index) => {\r\n            return <div key={index}>{status}</div>;\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.deploydataset}>\r\n        <h2>Deploy Confidential NFT</h2>\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"NFT Name\"\r\n          value={datasetNameValue}\r\n          onChange={handleDatasetNameChange}\r\n          placeholder=\"Dataset name\"\r\n        />\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"File url/ipfs\"\r\n          value={dataseturlipfsValue}\r\n          onChange={handleDataseturlipfsChange}\r\n          placeholder=\"Dataset Name\"\r\n        />\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"File checksum\"\r\n          value={datasetChecksumValue}\r\n          onChange={handleDatasetChecksumChange}\r\n          placeholder=\"encrypted file sha256sum\"\r\n        />\r\n        {statusDeploy ? <CircularProgress /> : <Button onClick={deploydataset}>Deploy DataSet</Button>}\r\n        <p>{statusDeploytext}</p>\r\n      </div>\r\n      <div className={classes.divider} id={\"deploydataset\"} ref={deploydatasetref}></div>\r\n      <div className={classes.pushtEncryptionkeytosms}>\r\n        <h2>Deploy Encryption Key</h2>\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Encryption Key\"\r\n          value={datasetEncryptionKeyValue}\r\n          onChange={handleDatasetEncryptionKeyChange}\r\n          placeholder=\"Dataset Key\"\r\n        />\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Dataset address\"\r\n          value={datasetAddressValue}\r\n          onChange={handleDatasetAddressChange}\r\n          placeholder=\"Dataset address\"\r\n        />\r\n\r\n        <Button onClick={pushsecret}>Push Encryption Key</Button>\r\n        <p>{statussecrettext}</p>\r\n      </div>\r\n      <div className={classes.divider} ref={pushtosmsref}></div>\r\n      <div className={classes.publishteedatasetorder}>\r\n        <h2>Grant Usage of your Confidential NFT</h2>\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Dataset address\"\r\n          value={datasetAddressValue}\r\n          onChange={handleDatasetAddressChange}\r\n          placeholder=\"Dataset address\"\r\n        />\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"#Access\"\r\n          value={datasetVolumeValue}\r\n          onChange={handleDatasetVolumeChange}\r\n          placeholder=\"1\"\r\n        />\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Restrict to app\"\r\n          value={datasetAppRestrictValue}\r\n          onChange={handleDatasetAppRestrictChange}\r\n          placeholder=\"0x0000000000000000000000000000000000000000\"\r\n        />\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Restrict to user\"\r\n          value={datasetRequesterRestrictValue}\r\n          onChange={handleDatasetRequesterRestrictChange}\r\n          placeholder=\"0x0000000000000000000000000000000000000000\"\r\n        />\r\n\r\n        <Button onClick={publishOrder}>Authorize</Button>\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Order hash\"\r\n          value={datasetOrderHashValue}\r\n          onChange={handleDatasetOrderHashChange}\r\n          placeholder=\"Order hash\"\r\n        />\r\n        <Button onClick={cancelOrder}>Cancel Authorization</Button>\r\n      </div>\r\n      <div className={classes.dividertee} ref={teeref}></div>\r\n      <div className={classes.orderbook}>\r\n        <h2>Run in demo app</h2>\r\n        <Button onClick={initStorage} disabled={disablestoragebutton}>\r\n          Init Storage\r\n        </Button>\r\n        <p>{storagetext}</p>\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Dataset address\"\r\n          value={datasetAddressValue}\r\n          onChange={handleDatasetAddressChange}\r\n          placeholder=\"Dataset address\"\r\n        />\r\n        {runapplaoding ? <CircularProgress /> : <Button onClick={appRun}>Run App</Button>}\r\n\r\n        <div>{appstatusdeal[0]}</div>\r\n        <div>{appstatus}</div>\r\n        \r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Task id\"\r\n          value={TaskidValue}\r\n          onChange={handleTaskidChange}\r\n          placeholder=\"Task id\"\r\n        />\r\n        <Button onClick={dowloadResults}>Download Task Result</Button>\r\n      </div>\r\n      <div className={classes.dividerlast}></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\r\nimport { Web3Provider } from \"@ethersproject/providers\";\r\nimport \"./App.css\";\r\nimport { Row, Col, Button, Menu, Alert } from \"antd\";\r\nimport Web3Modal from \"web3modal\";\r\nimport { IExec } from 'iexec';\r\nimport { useUserAddress } from \"eth-hooks\";\r\nimport {Account, Faucet } from \"./components\";\r\nimport { Home } from \"./views\";\r\nimport {NETWORK, NETWORKS } from \"./constants\";\r\n\r\n\r\n/// 📡 What chain are your contracts deployed to?\r\nconst targetNetwork = NETWORKS[\"iExecSidechain\"];\r\n\r\n// 🔭 block explorer URL\r\nconst blockExplorer = targetNetwork.blockExplorer;\r\n\r\n\r\nfunction App(props) {\r\n\r\n  // injected provider for writing\r\n  const [provider, setWriteProvider] = useState();\r\n  const [iexec, setiexec] = useState();\r\n  // infura provider pointed at target network for reading\r\n  // wait, can we use infura for mumbai or we need to get our own rpc\r\n  // yes.. we have to use RPC provider. project is already configured for multiple networks\r\n  // including mumbai.\r\n  // const readProvider = new JsonRpcProvider(targetNetwork.rpcUrl);\r\n\r\n\r\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\r\n  \r\n\r\n  const address = useUserAddress(provider);\r\n\r\n  // You can warn the user if you would like them to be on a specific network\r\n  let selectedChainId = provider?._network?.chainId;\r\n  let localChainId = targetNetwork?.chainId;\r\n\r\n\r\n\r\n\r\n \r\n\r\n  let networkDisplay = \"\";\r\n  if (targetNetwork?.chainId && selectedChainId && targetNetwork.chainId !== selectedChainId) {\r\n    networkDisplay = (\r\n      <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\r\n        <Alert\r\n          message={\"⚠️ Wrong Network\"}\r\n          description={\r\n            <div>\r\n              You have{\" \"}\r\n              <b>\r\n                {NETWORK(selectedChainId)?.name}({selectedChainId})\r\n              </b>{\" \"}\r\n              selected and you need to be on{\" \"}\r\n              <b>\r\n                {NETWORK(targetNetwork?.chainId)?.name} ({localChainId})\r\n              </b>\r\n              .\r\n            </div>\r\n          }\r\n          type=\"error\"\r\n          closable={false}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    networkDisplay = (\r\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\r\n        {targetNetwork.name}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const loadWeb3Modal = useCallback(async () => {\r\n    \r\n    \r\n    let ethProvider;\r\n  if (!window.ethereum)\r\n    // check existing web3 provider\r\n    throw Error('Need to install MetaMask');\r\n  ethProvider = window.ethereum;\r\n  ethProvider.on(\"chainChanged\", (_chainId) => window.location.reload());\r\n      ethProvider.on(\"accountsChanged\", (_accounts) =>\r\n        window.location.reload()\r\n      );\r\n      await window.ethereum.request({\r\n        method: \"eth_requestAccounts\"\r\n      });\r\n      window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: [\r\n          {\r\n            chainId: \"0x85\",\r\n            chainName: \"iExec Test Sidechain\",\r\n            nativeCurrency: {\r\n              name: \"xRLC\",\r\n              symbol: \"xRLC\",\r\n              decimals: 18\r\n            },\r\n            rpcUrls: [\"https://viviani.iex.ec\"],\r\n            blockExplorerUrls: [\"https://blockscout-viviani.iex.ec\"]\r\n          }\r\n        ]\r\n      });\r\n  try {\r\n    await window.ethereum.request({ method: 'eth_requestAccounts' }); // prompt the use to grant the dapp access to the blockchain\r\n  } catch (error) {\r\n    throw Error('User denied access', error);\r\n  }\r\n  const web3provider = new Web3Provider(ethProvider);\r\n    // Wrapper for transforming a web3 provider (like metamask)\r\n    setWriteProvider(web3provider);\r\n    setiexec(new IExec(\r\n      {\r\n        ethProvider: ethProvider, // an eth signer provider like MetaMask connected to https://bellecour.iex.ec\r\n      },\r\n      {\r\n        isNative: true, // iExec sidechain use RLC as native token\r\n        smsURL: \"https://v7.sms.debug-tee-services.viviani.iex.ec\"\r\n      },\r\n    ));\r\n  }, [setWriteProvider]);\r\n\r\n  useEffect(() => {\r\n    if (web3Modal.cachedProvider) {\r\n      loadWeb3Modal();\r\n    }\r\n  }, [loadWeb3Modal]);\r\n\r\n  const [route, setRoute] = useState();\r\n  useEffect(() => {\r\n    setRoute(window.location.pathname);\r\n  }, [setRoute]);\r\n\r\n  let faucetHint = \"\";\r\n  const faucetAvailable = provider && provider.connection && targetNetwork.name === \"localhost\";\r\n\r\n  const [faucetClicked, setFaucetClicked] = useState(false);\r\n  if (\r\n    !faucetClicked &&\r\n    provider &&\r\n    provider._network &&\r\n    provider._network.chainId === 31337\r\n  ) {\r\n    faucetHint = (\r\n      <div style={{ padding: 16 }}>\r\n        <Button\r\n          type={\"primary\"}\r\n          onClick={() => {\r\n            setFaucetClicked(true);\r\n          }}\r\n        >\r\n          <span role=\"img\" aria-label=\"funds\">💰</span> Grab funds from the faucet <span role=\"img\" aria-label=\"gas\">⛽️</span>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      \r\n      {networkDisplay}\r\n      <BrowserRouter>\r\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\r\n          <Menu.Item key=\"/\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute(\"/\");\r\n              }}\r\n              to=\"/\"\r\n            >\r\n              \r\n            </Link>\r\n          </Menu.Item>\r\n          \r\n          \r\n        </Menu>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n          {address?\r\n              <Home address={address} writeProvider={provider} iexec={iexec}/>\r\n              : <div style={{paddingTop: \"130px\"}}>Connect your wallet to use the Dapp!</div>\r\n            }\r\n          </Route>\r\n          \r\n        </Switch>\r\n      </BrowserRouter>\r\n\r\n      {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\r\n      <div style={{ position: \"fixed\", textAlign: \"right\", left: 0,right: 0, top: 0,}}>\r\n        <Account\r\n          address={address}\r\n          provider={provider}\r\n          web3Modal={web3Modal}\r\n          loadWeb3Modal={loadWeb3Modal}\r\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n          blockExplorer={blockExplorer}\r\n        />\r\n        {faucetHint}\r\n      </div>\r\n\r\n      {/* 🗺 Extra UI like gas price, eth price, faucet, and support: */}\r\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\r\n        <Row align=\"middle\" gutter={[4, 4]}>\r\n          <Col span={24}>\r\n            {\r\n              /*  if the local provider has a signer, let's show the faucet:  */\r\n              faucetAvailable ? (\r\n                <Faucet\r\n                  localProvider={provider}\r\n                  // price={price}\r\n                  // ensProvider={provider}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\n  Web3 modal helps us \"connect\" external wallets:\r\n*/\r\nconst web3Modal = new Web3Modal({\r\n  // network: \"mainnet\", // optional\r\n  cacheProvider: true, // optional\r\n  providerOptions: {\r\n    \r\n  },\r\n});\r\n\r\nconst logoutOfWeb3Modal = async () => {\r\n  await web3Modal.clearCachedProvider();\r\n  setTimeout(() => {\r\n    window.location.reload();\r\n  }, 1);\r\n};\r\n\r\nwindow.ethereum &&\r\n  window.ethereum.on(\"chainChanged\", chainId => {\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 1);\r\n  });\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\n\r\n\r\nimport ThemeProvider from \"ui-kit/components/ThemeProvider\";\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  \r\n  <ThemeProvider>\r\n      <App/>\r\n  </ThemeProvider>\r\n  ,\r\n  document.getElementById(\"root\"),\r\n);\r\n","import Ipfs from \"ipfs\";\r\n\r\nconst DEFAULT_IPFS_GATEWAY = \"https://ipfs.io\";\r\n\r\nexport const get = async (cid, { ipfsGateway = DEFAULT_IPFS_GATEWAY } = {}) => {\r\n  const multiaddr = `/ipfs/${cid.toString()}`;\r\n  const publicUrl = `${ipfsGateway}${multiaddr}`;\r\n  const res = await fetch(publicUrl);\r\n  if (!res.ok) {\r\n    throw Error(`Failed to load content from ${publicUrl}`);\r\n  }\r\n  const arrayBuffer = await res.arrayBuffer();\r\n  return Buffer.from(arrayBuffer);\r\n};\r\n\r\nexport const add = async (content, { ipfsGateway = DEFAULT_IPFS_GATEWAY } = {}) => {\r\n  const ipfs = await Ipfs.create();\r\n  try {\r\n    const { cid } = await ipfs.add(content);\r\n    await ipfs.pin.add(cid, { timeout: 10000 }).catch(e => console.log(\"Ipfs add pin failed\", e));\r\n    await get(cid.toString(), { ipfsGateway });\r\n    await ipfs.stop();\r\n    return cid.toString();\r\n  } catch (e) {\r\n    if (typeof ipfs.stop === \"function\") {\r\n      await ipfs.stop();\r\n    }\r\n    throw e;\r\n  }\r\n};\r\n"],"sourceRoot":""}